{"ast":null,"code":"import axios from 'axios';\nimport { GET_ITEMS, DELETE_ITEMS, UPDATE_ITEM, CREATE_ITEM, GET_ERRORS } from './types';\nimport { createMessage } from './messages';\nimport { tokenConfig } from './auth';\nconst API_URL = 'https://wishlist-backend-server.herokuapp.com'; // const API_URL = 'http://127.0.0.1:8000';\n// GET ITEMS\n\nexport const getItems = link => (dispatch, getState) => {\n  let url = \"\".concat(API_URL, \"/api/items\");\n\n  if (link) {\n    url = \"\".concat(API_URL).concat(link);\n  }\n\n  axios.get(url, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_ITEMS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // DELETE_ITEMS\n\nexport const deleteItems = id => (dispatch, getState) => {\n  const url = \"\".concat(API_URL, \"/api/items/\").concat(id);\n  axios.delete(url, tokenConfig(getState)).then(res => {\n    dispatch(createMessage({\n      deleteItem: 'Item deleted'\n    }));\n    dispatch({\n      type: DELETE_ITEMS,\n      payload: id\n    });\n  }).catch(err => console.log(err));\n}; // CREATE_ITEM\n\nexport const createItem = item => (dispatch, getState) => {\n  let url = \"\".concat(API_URL, \"/api/items/\");\n  axios.post(url, item, tokenConfig(getState)).then(res => {\n    dispatch(createMessage({\n      createItem: 'Item created'\n    }));\n    dispatch({\n      type: CREATE_ITEM,\n      payload: res.data\n    });\n  }).catch(err => {\n    const errors = {\n      msg: err.response.data,\n      status: err.response.status\n    };\n    dispatch({\n      type: GET_ERRORS,\n      payload: errors\n    });\n  });\n}; // UPDATE_ITEM\n\nexport const updateItem = item => (dispatch, getState) => {\n  let url = \"\".concat(API_URL, \"/api/items/\").concat(item.id, \"/\");\n  console.log(\"updataItem: \".concat(JSON.stringify(item, null, 4)));\n  axios.put(url, item, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: UPDATE_ITEM,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/mnt/d/Personal Project/wish-list/frontend/src/actions/items.js"],"names":["axios","GET_ITEMS","DELETE_ITEMS","UPDATE_ITEM","CREATE_ITEM","GET_ERRORS","createMessage","tokenConfig","API_URL","getItems","link","dispatch","getState","url","get","then","res","type","payload","data","catch","err","console","log","deleteItems","id","delete","deleteItem","createItem","item","post","errors","msg","response","status","updateItem","JSON","stringify","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport {GET_ITEMS, DELETE_ITEMS, UPDATE_ITEM, CREATE_ITEM, GET_ERRORS} from './types';\r\nimport { createMessage } from './messages';\r\nimport { tokenConfig } from './auth';\r\n\r\nconst API_URL = 'https://wishlist-backend-server.herokuapp.com';\r\n// const API_URL = 'http://127.0.0.1:8000';\r\n\r\n// GET ITEMS\r\nexport const getItems = (link) => (dispatch, getState) => {\r\n    \r\n    let url = `${API_URL}/api/items`;\r\n\r\n    if(link) {\r\n        url = `${API_URL}${link}`;\r\n    }\r\n\r\n    axios.get(url, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ITEMS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n// DELETE_ITEMS\r\nexport const deleteItems = (id) => (dispatch, getState) => {\r\n    const url = `${API_URL}/api/items/${id}`;\r\n\r\n    axios.delete(url, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch(createMessage({\r\n                deleteItem: 'Item deleted'\r\n            }));\r\n            dispatch({\r\n                type: DELETE_ITEMS,\r\n                payload: id\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n// CREATE_ITEM\r\nexport const createItem = (item) => (dispatch, getState) => {\r\n    let url = `${API_URL}/api/items/`;\r\n    axios.post(url, item, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch(createMessage({\r\n                createItem: 'Item created'\r\n            }));\r\n            dispatch({\r\n                type: CREATE_ITEM,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            const errors = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n            }\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: errors\r\n            })\r\n        });\r\n}\r\n\r\n// UPDATE_ITEM\r\nexport const updateItem = (item) => (dispatch, getState) => {\r\n    let url = `${API_URL}/api/items/${item.id}/`;\r\n\r\n    console.log(`updataItem: ${JSON.stringify(item, null, 4)}`);\r\n    axios.put(url, item, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPDATE_ITEM,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}