{"ast":null,"code":"var _jsxFileName = \"/mnt/d/Personal Project/wish-list/frontend/src/components/wishItems/WishItemForm.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport DatePicker from \"react-datepicker\";\nimport { connect } from 'react-redux';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PropTypes from 'prop-types';\nimport { createItem, updateItem } from '../../actions/items';\n\nclass WishItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: new Date(),\n      wantness: ''\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleWantnessChange = this.handleWantnessChange.bind(this);\n  }\n\n  componentDidMount() {\n    let item = this.props.item;\n\n    if (item) {\n      this.setState({\n        wantness: item.wantness\n      });\n    }\n  }\n\n  handleWantnessChange(selectedOption) {\n    this.setState({\n      wantness: selectedOption.value\n    });\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  handleCreate() {\n    let item = {\n      'name': this.refs.name.value,\n      'wantness': this.state.wantness,\n      'price': parseFloat(this.refs.price.value),\n      'date_created': this.state.startDate,\n      'result': this.refs.result.value\n    };\n    this.props.createItem(item);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    window.location.reload();\n\n    if (this.props.item) {\n      let newItem = {\n        'id': this.props.item.id,\n        'name': this.refs.name.value,\n        'wantness': this.state.wantness,\n        'price': parseFloat(this.refs.price.value),\n        'date_created': this.state.startDate,\n        'result': this.refs.result.value\n      };\n      this.props.updateItem(newItem);\n    } else {\n      this.handleCreate();\n    }\n  }\n\n  render() {\n    const item = this.props.item;\n    const options = this.props.options;\n    const nameLayout = React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-3 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, item ? React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      ref: \"name\",\n      defaultValue: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      ref: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n    const wantnessLayout = React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-3 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"How bad do you want it?\"), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, item ? React.createElement(Select, {\n      options: options,\n      onChange: this.handleWantnessChange,\n      defaultValue: options.filter(option => option.value == item.wantness),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) : React.createElement(Select, {\n      options: options,\n      onChange: this.handleWantnessChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })));\n    const priceLayout = React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, item ? React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      ref: \"price\",\n      defaultValue: item.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }) : React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      ref: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n    const dateLayout = React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })));\n    const resultLayout = React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, item ? React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      ref: \"result\",\n      defaultValue: item.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }) : React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      ref: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n    const buttonsLayout = React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, item ? React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Update\") : React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Create\")));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, nameLayout, wantnessLayout, priceLayout, dateLayout, resultLayout, buttonsLayout));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  items: state.items.items\n});\n\nexport default connect(mapStateToProps, {\n  createItem,\n  updateItem\n})(WishItemForm);","map":{"version":3,"sources":["/mnt/d/Personal Project/wish-list/frontend/src/components/wishItems/WishItemForm.js"],"names":["React","Component","Select","DatePicker","connect","PropTypes","createItem","updateItem","WishItemForm","constructor","props","state","startDate","Date","wantness","handleDateChange","bind","handleCreate","handleSubmit","handleWantnessChange","componentDidMount","item","setState","selectedOption","value","date","refs","name","parseFloat","price","result","event","preventDefault","window","location","reload","newItem","id","render","options","nameLayout","wantnessLayout","filter","option","priceLayout","dateLayout","resultLayout","buttonsLayout","mapStateToProps","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { connect } from 'react-redux';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { createItem, updateItem } from '../../actions/items'\r\n\r\nclass WishItemForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            startDate: new Date(),\r\n            wantness: '',\r\n        }\r\n\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleCreate = this.handleCreate.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleWantnessChange = this.handleWantnessChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let item = this.props.item;\r\n\r\n        if (item) {\r\n            this.setState({ wantness: item.wantness })\r\n        }\r\n    }\r\n\r\n    handleWantnessChange(selectedOption) {\r\n        this.setState({ wantness: selectedOption.value });\r\n    }\r\n\r\n    handleDateChange(date) {\r\n        this.setState({ startDate: date });\r\n    }\r\n\r\n    handleCreate() {\r\n        let item = {\r\n            'name': this.refs.name.value,\r\n            'wantness': this.state.wantness,\r\n            'price': parseFloat(this.refs.price.value),\r\n            'date_created': this.state.startDate,\r\n            'result': this.refs.result.value,\r\n        }\r\n        this.props.createItem(item);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        window.location.reload();\r\n        if (this.props.item) {\r\n            let newItem = {\r\n                'id': this.props.item.id,\r\n                'name': this.refs.name.value,\r\n                'wantness': this.state.wantness,\r\n                'price': parseFloat(this.refs.price.value),\r\n                'date_created': this.state.startDate,\r\n                'result': this.refs.result.value,\r\n            }\r\n            this.props.updateItem(newItem);\r\n        } else {\r\n            this.handleCreate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const item = this.props.item;\r\n        const options = this.props.options;\r\n\r\n        const nameLayout = (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">Name</label>\r\n                <div className=\"col-sm-9\">\r\n                    {item ?\r\n                        (<input type=\"text\" className=\"form-control\" ref='name' defaultValue={item.name} />) :\r\n                        (<input type=\"text\" className=\"form-control\" ref='name' />)}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const wantnessLayout = (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">How bad do you want it?</label>\r\n                <div className=\"col-sm-9\">\r\n                    {item ?\r\n                        (<Select\r\n                            options={options}\r\n                            onChange={this.handleWantnessChange}\r\n                            defaultValue={options.filter(option => option.value == item.wantness)}\r\n                        />) :\r\n                        (<Select\r\n                            options={options}\r\n                            onChange={this.handleWantnessChange}\r\n                        />)}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const priceLayout = (\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-sm-3\">Price</div>\r\n                <div className=\"col-sm-9\">\r\n                    {item ?\r\n                        (<input type=\"text\" className=\"form-control\" ref=\"price\" defaultValue={item.price} />) :\r\n                        (<input type=\"text\" className=\"form-control\" ref=\"price\" />)}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const dateLayout = (\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-sm-3\">Date</div>\r\n                <div className=\"col-sm-9\">\r\n                    <DatePicker\r\n                        selected={this.state.startDate}\r\n                        onChange={this.handleDateChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const resultLayout = (\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-sm-3\">Result</div>\r\n                <div className=\"col-sm-9\">\r\n                    {item ?\r\n                        (<input type=\"text\" class=\"form-control\" ref=\"result\" defaultValue={item.result} />) :\r\n                        (<input type=\"text\" class=\"form-control\" ref=\"result\" />)}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const buttonsLayout = (\r\n            <div className=\"form-group row\">\r\n                <div className=\"col-sm-10\">\r\n                    {item ?\r\n                        (<button type=\"submit\" className=\"btn btn-primary\">Update</button>) :\r\n                        (<button type=\"submit\" className=\"btn btn-primary\">Create</button>)}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {nameLayout}\r\n                    {wantnessLayout}\r\n                    {priceLayout}\r\n                    {dateLayout}\r\n                    {resultLayout}\r\n                    {buttonsLayout}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    items: state.items.items\r\n});\r\n\r\nexport default connect(mapStateToProps, { createItem, updateItem })(WishItemForm);"]},"metadata":{},"sourceType":"module"}